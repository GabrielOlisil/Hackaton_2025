# Generated by Django 5.2.4 on 2025-07-21 16:16

import django.contrib.postgres.indexes
import django.contrib.postgres.search
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Establishment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('google_place_id', models.CharField(help_text='ID do lugar no Google Places', max_length=255, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('address', models.CharField(blank=True, help_text='Endere√ßo do estabelecimento', max_length=500, null=True)),
                ('lat', models.FloatField(blank=True, null=True)),
                ('lng', models.FloatField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('search_vector', django.contrib.postgres.search.SearchVectorField(editable=False, null=True)),
            ],
            options={
                'indexes': [django.contrib.postgres.indexes.GinIndex(fields=['search_vector'], name='places_prod_search__0df32f_gin')],
            },
        ),
        migrations.CreateModel(
            name='ProductEstablishment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('establishment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='places.establishment')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='places.product')),
            ],
            options={
                'unique_together': {('product', 'establishment')},
            },
        ),
    ]
